clear all
close all

global t tac tdo Xd Sd Ad F V Mmax K1 K Ks N K2 E K3 Kla DOo

load ec1807kf
load ec1807k
load ec1807ac
load ec1807gs

Xd = ec1807kf(:,3);
Sd = ec1807kf(:,2);
A = ec1807ac(:,2);
F = ec1807kf(:,6);
V = ec1807k(:,6);
DOd = ec1807gs(:,4);%O2

t = ec1807kf(:,1);
tac = ec1807ac(:,1);
tdo1 = ec1807gs(:,1);

ndx = find(ec1807kf(:, 1) >= 6.69 & ec1807kf(:, 1)<= 11.57);
t = ec1807kf(ndx,1);
Sd = ec1807kf(ndx,2);
Xd = ec1807kf(ndx,3); 
F = ec1807kf(ndx,6);
V = ec1807k(ndx,6);

t0 = t(1); tf = t(length(t));

ndx1 = find(ec1807ac(:, 1) >= 6.69 & ec1807ac(:, 1)<= 11.57);
Adop = interp1(tac, A, [t0 tf]);
tac = tac(ndx1);
A = A(ndx1);
Ad = [Adop(1); A];
tac = [t0; tac];

ndx2 = find(ec1807gs(:, 1) >= 6.69 & ec1807gs(:, 1)<= 11.57);

O2dop = interp1(tdo1, DOd, [t0 tf]); 
tdo = tdo1(ndx2);
DOd = DOd(ndx2);
DOd = [O2dop(1); DOd; O2dop(2)];
tdo = [t0; tdo; tf];

X0 = Xd(1); S0 = Sd(1); A0 = Ad(1); DO0 = DOd(1); 






N = 20; % any even number
mf = 200; % max fun evals
fun = @error_sa_ta;
% lb = -3*ones(1,N);
% ub = -lb;
rng default
% x0 = -3*rand(1,N);
lb = [0.2 0 0.5]; ub = [0.8 0.1 3]; x0 = [0.5 0.03 2];   % Monod

options = optimoptions('surrogateopt','MaxFunctionEvaluations',mf);
[xm,fvalm,~,~,pop] = surrogateopt(fun,lb,ub,options);


 Mmax = xm(1);  Ks = xm(2); K1 = xm(3); 

% opt X, S
% lb = [0.2 0 0.5 1]; ub = [0.8 0.1 3 10]; x0 = [0.5 0.03 2 3]; % Moser
% lb = [0.2 1 0.5]; ub = [0.8 20 3]; x0 = [0.5 6 2]; % Tessier
% lb = [0.2 0 0 0.5]; ub = [0.8 0.1 10 3]; x0 = [0.5 0.03 1 2];   

% opt A
% Mmax = 0.5402; Ks = 0.0288; K1 = 2.0118; N=;
% lb = [0]; ub = [1]; x0 = [0.05];   

% opt O2
% Mmax = 0.5402; Ks = 0.0288; K1 = 2.0118; K2=;
% lb = [0 0 19]; ub = [1 50 22]; x0 = [0.1 20 20];   

%RESULTS1 = zeros(1,6); INDEX1 = 0;

% computational time
computational_time = 0;
tt = cputime;

% fun = @dejong5fcn;
% x0 = [0 0];
% x = simulannealbnd(fun,x0)

% options = optimoptions('simulannealbnd','PlotFcns',...
%           {@saplotbestx,@saplotbestf,@saplotx,@saplotf});
% fun = @dejong5fcn;
% x0 = [0,0];
% lb = [-64,-64];
% ub = [64,64];
% [x,fval,exitflag,output] = simulannealbnd(fun,x0,lb,ub)


% Simulated Annealing

% AnnealingFcn - @annealingfast
%options = saoptimset('Display','iter', 'InitialTemperature', 1, 'PlotFcns',{@saplotbestx,@saplotbestf,@saplotx,@saplotf});
%options = saoptimset(options,'TemperatureFcn',@temperatureexp, 'ReannealInterval',50, 'DisplayInterval', 100);

% default temperature function - temperatureexp
% another posibilities - temperaturefast or temperatureboltz

% AnnealingFcn - @annealingboltz
% options = optimoptions('AnnealingFcn',@annealingboltz,'Display','iter', ...
%     'InitialTemperature', 100, 'simulannealbnd', 'PlotFcn', ...
%          {@saplotbestx, @saplotbestf, @saplotx, @saplotf});

lb = [0.2 0 0.5]; ub = [0.8 0.1 3]; x0 = [0.5 0.03 2];   % Monod

% options = optimoptions('simulannealbnd','PlotFcns',...
%           {@saplotbestx,@saplotbestf,@saplotx,@saplotf});
options = optimoptions('simulannealbnd','PlotFcns',...
          {@saplotbestf,@saplotf});

options = optimoptions(options, 'InitialTemperature', 100, 'TemperatureFcn',@temperatureexp, 'ReannealInterval',100, 'DisplayInterval', 100);

% [par1, fval, exitflag, output] = simulannealbnd(@error_sa_ta, x0, [],[],[],[], lb, ub, options)
[par1, fval] = simulannealbnd(@error_sa_ta, x0, lb, ub, options)

%[par1, fval, exitflag, output] = threshacceptbnd(@error_sa_ta, x0, lb, ub, options)

computational_time = cputime-tt

 Mmax = par1(1);  Ks = par1(2); K1 = par1(3); 
% Mmax = par1(1);  Ks = par1(2); K1 = par1(3); N = par1(4);
% Mmax = par1(1);  K = par1(2); K1 = par1(3);
% K2 = par1;
% K3 = par1(1);  Kla = par1(2); DOo = par1(3);

options = simset('solver', 'ode45', 'RelTol', 1e-4, 'AbsTol', 1e-6, 'MaxStep', 1);
TIMESPAN = [t(1) t(length(t))];

 [T, X, Y] = sim('Model_XS1',  TIMESPAN, options, []); % model 1
% [T, X, Y] = sim('model_xs2',  TIMESPAN, options, []); % model 2
% [T, X, Y] = sim('model_xs3',  TIMESPAN, options, []); % model 3

% [T, X, Y] = sim('model_xsa1',  TIMESPAN, options, []); % model 1
% [T, X, Y] = sim('model_xsa2',  TIMESPAN, options, []); % model 2
% [T, X, Y] = sim('model_xsa3',  TIMESPAN, options, []); % model 3

% [T, X, Y] = sim('model_xsao1',  TIMESPAN, options, []); % model 1
% [T, X, Y] = sim('model_xsao2',  TIMESPAN, options, []); % model 2
% [T, X, Y] = sim('model_xsao3',  TIMESPAN, options, []); % model 3

tmod1 = T; Xmod1 = Y(:, 1); Smod1 = Y(:, 2); 
% Amod1 = Y(:, 3); 
% DOdmod1 = Y(:, 4);

figure(3), plot(t, Xd, 'r*'), hold on, plot(tmod1, Xmod1, 'b' )
title('Fed-batch cultivation process of E. coli MC4110'), 
xlabel('Time, [h]'), ylabel('Biomass, [g/l]')

figure(4), plot(t, Sd, 'r*'), hold on, plot(tmod1, Smod1, 'b' )
title('Fed-batch cultivation process of E. coli MC4110'), 
xlabel('Time, [h]'), ylabel('Substrate, [g/l]')

% figure(5), plot(tac, Ad, 'r*'), hold on, plot(tmod1, Amod1, 'b' ), 
% %legend('Experimental data', 'Model data - SA', 2)
% title('Fed-batch cultivation process of E. coli MC4110'), 
% xlabel('Time, [h]'), ylabel('Acetate, [g/l]')
% 
% figure(6),plot(tdo, DOd, 'r*'), hold on, plot(tmod1, DOmod1, 'b' )
% title('Fed-batch cultivation process of E. coli MC4110'), 
% xlabel('Time, [h]'), ylabel('Dissolved oxygen, [%]')

figure(7)
plot(1:INDEX1,RESULTS1(:,1), 'k-', 'LineWidth',2), hold on
plot(1:INDEX1,RESULTS1(:,2), 'k--', 'LineWidth',2), hold on
plot(1:INDEX1,RESULTS1(:,3), 'k-.', 'LineWidth',2);
% plot(1:INDEX1,RESULTS1(:,4), 'k--', 'LineWidth',2), hold on
% plot(1:INDEX1,RESULTS1(:,5), 'k-.', 'LineWidth',2);

% title('Paramaters Estimation through Generations'),
% xlabel('Function evaluation'); ylabel('Mmax Ks K1');
% legend('Mmax', 'Ks', 'K1')

% figure(8), semilogy(1:INDEX1,RESULTS1(:,4),'k-', 'LineWidth',2);
% title('Error Minimum through Generations'), xlabel('Generations'), ylabel('Error Minimum')

